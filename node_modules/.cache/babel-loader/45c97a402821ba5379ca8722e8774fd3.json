{"ast":null,"code":"import { API_BASE } from '../config/env';\nimport axios from 'axios';\nexport const NEW_MOVIE_PENDING = \"NEW_MOVIE_PENDING\";\nexport const NEW_MOVIE_FULFILLED = \"NEW_MOVIE_FULFILLED\";\nexport const NEW_MOVIE_REJECTED = \"NEW_MOVIE_REJECTED\";\nexport const FETCH_MOVIE_PENDING = \"FETCH_MOVIE_PENDING\";\nexport const FETCH_MOVIE_FULFILLED = \"FETCH_MOVIE_FULFILLED\";\nexport const FETCH_MOVIE_REJECTED = \"FETCH_MOVIE_REJECTED\";\nexport const UPDATE_MOVIE_PENDING = \"UPDATE_MOVIE_PENDING\";\nexport const UPDATE_MOVIE_FULFILLED = \"UPDATE_MOVIE_FULFILLED\";\nexport const UPDATE_MOVIE_REJECTED = \"UPDATE_MOVIE_REJECTED\";\nexport function onNewMovieSubmit({\n  title,\n  cover\n}) {\n  return dispatch => {\n    dispatch({\n      type: \"NEW_MOVIE\",\n      payload: axios.post(\"\".concat(API_BASE, \"/movies\"), {\n        title,\n        cover\n      })\n    });\n  };\n}\nexport function onUpdateMovieSubmit({\n  _id,\n  title,\n  cover\n}) {\n  return dispatch => {\n    dispatch({\n      type: \"NEW_MOVIE\",\n      payload: axios.put(\"\".concat(API_BASE, \"/movies/\").concat(_id), {\n        title,\n        cover\n      })\n    });\n  };\n}\nexport function fetchMovie(id) {\n  return dispatch => {\n    dispatch({\n      type: \"FETCH_MOVIE\",\n      payload: axios.get(\"\".concat(API_BASE, \"/movies/\").concat(id)).then(result => result.data)\n    });\n  };\n}","map":{"version":3,"sources":["/Users/ertugrulkayis/Desktop/Movie-App/src/actions/newMovie.js"],"names":["API_BASE","axios","NEW_MOVIE_PENDING","NEW_MOVIE_FULFILLED","NEW_MOVIE_REJECTED","FETCH_MOVIE_PENDING","FETCH_MOVIE_FULFILLED","FETCH_MOVIE_REJECTED","UPDATE_MOVIE_PENDING","UPDATE_MOVIE_FULFILLED","UPDATE_MOVIE_REJECTED","onNewMovieSubmit","title","cover","dispatch","type","payload","post","onUpdateMovieSubmit","_id","put","fetchMovie","id","get","then","result","data"],"mappings":"AAAA,SAASA,QAAT,QAAyB,eAAzB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,iBAAiB,GAAG,mBAA1B;AACP,OAAO,MAAMC,mBAAmB,GAAG,qBAA5B;AACP,OAAO,MAAMC,kBAAkB,GAAG,oBAA3B;AAEP,OAAO,MAAMC,mBAAmB,GAAG,qBAA5B;AACP,OAAO,MAAMC,qBAAqB,GAAG,uBAA9B;AACP,OAAO,MAAMC,oBAAoB,GAAG,sBAA7B;AAEP,OAAO,MAAMC,oBAAoB,GAAG,sBAA7B;AACP,OAAO,MAAMC,sBAAsB,GAAG,wBAA/B;AACP,OAAO,MAAMC,qBAAqB,GAAG,uBAA9B;AAEP,OAAO,SAASC,gBAAT,CAA0B;AAAEC,EAAAA,KAAF;AAASC,EAAAA;AAAT,CAA1B,EAA2C;AACjD,SAAOC,QAAQ,IAAI;AAClBA,IAAAA,QAAQ,CAAC;AACRC,MAAAA,IAAI,EAAE,WADE;AAERC,MAAAA,OAAO,EAAEf,KAAK,CAACgB,IAAN,WAAcjB,QAAd,cAAiC;AACzCY,QAAAA,KADyC;AAEzCC,QAAAA;AAFyC,OAAjC;AAFD,KAAD,CAAR;AAOA,GARD;AASA;AAED,OAAO,SAASK,mBAAT,CAA6B;AAAEC,EAAAA,GAAF;AAAOP,EAAAA,KAAP;AAAcC,EAAAA;AAAd,CAA7B,EAAmD;AACzD,SAAOC,QAAQ,IAAI;AAClBA,IAAAA,QAAQ,CAAC;AACRC,MAAAA,IAAI,EAAE,WADE;AAERC,MAAAA,OAAO,EAAEf,KAAK,CAACmB,GAAN,WAAapB,QAAb,qBAAgCmB,GAAhC,GAAuC;AAC/CP,QAAAA,KAD+C;AAE/CC,QAAAA;AAF+C,OAAvC;AAFD,KAAD,CAAR;AAOA,GARD;AASA;AAED,OAAO,SAASQ,UAAT,CAAoBC,EAApB,EAAuB;AAC7B,SAAOR,QAAQ,IAAI;AAClBA,IAAAA,QAAQ,CAAC;AACRC,MAAAA,IAAI,EAAE,aADE;AAERC,MAAAA,OAAO,EAAEf,KAAK,CAACsB,GAAN,WAAavB,QAAb,qBAAgCsB,EAAhC,GACPE,IADO,CACFC,MAAM,IAAIA,MAAM,CAACC,IADf;AAFD,KAAD,CAAR;AAKA,GAND;AAOA","sourcesContent":["import { API_BASE } from '../config/env';\nimport axios from 'axios';\n\nexport const NEW_MOVIE_PENDING = \"NEW_MOVIE_PENDING\";\nexport const NEW_MOVIE_FULFILLED = \"NEW_MOVIE_FULFILLED\";\nexport const NEW_MOVIE_REJECTED = \"NEW_MOVIE_REJECTED\";\n\nexport const FETCH_MOVIE_PENDING = \"FETCH_MOVIE_PENDING\";\nexport const FETCH_MOVIE_FULFILLED = \"FETCH_MOVIE_FULFILLED\";\nexport const FETCH_MOVIE_REJECTED = \"FETCH_MOVIE_REJECTED\";\n\nexport const UPDATE_MOVIE_PENDING = \"UPDATE_MOVIE_PENDING\";\nexport const UPDATE_MOVIE_FULFILLED = \"UPDATE_MOVIE_FULFILLED\";\nexport const UPDATE_MOVIE_REJECTED = \"UPDATE_MOVIE_REJECTED\";\n\nexport function onNewMovieSubmit({ title, cover }){\n\treturn dispatch => {\n\t\tdispatch({\n\t\t\ttype: \"NEW_MOVIE\",\n\t\t\tpayload: axios.post(`${API_BASE}/movies`, {\n\t\t\t\ttitle,\n\t\t\t\tcover\n\t\t\t})\n\t\t})\n\t}\n}\n\nexport function onUpdateMovieSubmit({ _id, title, cover }){\n\treturn dispatch => {\n\t\tdispatch({\n\t\t\ttype: \"NEW_MOVIE\",\n\t\t\tpayload: axios.put(`${API_BASE}/movies/${_id}`, {\n\t\t\t\ttitle,\n\t\t\t\tcover\n\t\t\t})\n\t\t})\n\t}\n}\n\nexport function fetchMovie(id){\n\treturn dispatch => {\n\t\tdispatch({\n\t\t\ttype: \"FETCH_MOVIE\",\n\t\t\tpayload: axios.get(`${API_BASE}/movies/${id}`)\n\t\t\t\t.then(result => result.data)\n\t\t})\n\t}\n}"]},"metadata":{},"sourceType":"module"}