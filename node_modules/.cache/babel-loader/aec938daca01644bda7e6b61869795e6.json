{"ast":null,"code":"var _jsxFileName = \"/Users/ertugrulkayis/Desktop/Movie-App/src/components/MoviesList.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport MovieCard from './MovieCard';\nimport { Grid } from 'semantic-ui-react';\nimport { HashLoader } from 'react-spinners';\n\nconst MoviesList = ({\n  movies,\n  deleteMovie\n}) => {\n  const emptyMessage = React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, \"There are no movies yet.\");\n  const moviesList = React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, React.createElement(HashLoader, {\n    size: 40,\n    color: '#36bdb3',\n    loading: movies.fetching,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }), movies.error.response ? React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, \"Error retrieving data!\") : React.createElement(Grid, {\n    stackable: true,\n    columns: 3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, movies.movieList.map(movie => React.createElement(MovieCard, {\n    key: movie._id,\n    deleteMovie: deleteMovie,\n    movie: movie,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }))));\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, movies.length === 0 ? emptyMessage : moviesList);\n};\n\nMoviesList.propTypes = {\n  movies: PropTypes.shape({\n    movieList: PropTypes.array.isRequired\n  }).isRequired\n};\nexport default MoviesList;","map":{"version":3,"sources":["/Users/ertugrulkayis/Desktop/Movie-App/src/components/MoviesList.js"],"names":["React","PropTypes","MovieCard","Grid","HashLoader","MoviesList","movies","deleteMovie","emptyMessage","moviesList","fetching","error","response","movieList","map","movie","_id","length","propTypes","shape","array","isRequired"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,SAASC,IAAT,QAAqB,mBAArB;AACA,SAASC,UAAT,QAA2B,gBAA3B;;AAEA,MAAMC,UAAU,GAAG,CAAC;AAAEC,EAAAA,MAAF;AAAUC,EAAAA;AAAV,CAAD,KAA6B;AAC/C,QAAMC,YAAY,GACjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCADD;AAIA,QAAMC,UAAU,GACf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEC,oBAAC,UAAD;AACC,IAAA,IAAI,EAAE,EADP;AAEC,IAAA,KAAK,EAAE,SAFR;AAGC,IAAA,OAAO,EAAEH,MAAM,CAACI,QAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFD,EASEJ,MAAM,CAACK,KAAP,CAAaC,QAAb,GACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BADH,GAGC,oBAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAgB,IAAA,OAAO,EAAE,CAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEEN,MAAM,CAACO,SAAP,CAAiBC,GAAjB,CAAqBC,KAAK,IACzB,oBAAC,SAAD;AACC,IAAA,GAAG,EAAEA,KAAK,CAACC,GADZ;AAEC,IAAA,WAAW,EAAET,WAFd;AAGC,IAAA,KAAK,EAAEQ,KAHR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CAFF,CAZH,CADD;AA0BA,SACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGT,MAAM,CAACW,MAAP,KAAkB,CAAlB,GAAsBT,YAAtB,GAAqCC,UADxC,CADD;AAKA,CApCD;;AAsCAJ,UAAU,CAACa,SAAX,GAAuB;AACtBZ,EAAAA,MAAM,EAAEL,SAAS,CAACkB,KAAV,CAAgB;AACvBN,IAAAA,SAAS,EAAEZ,SAAS,CAACmB,KAAV,CAAgBC;AADJ,GAAhB,EAELA;AAHmB,CAAvB;AAMA,eAAehB,UAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport MovieCard from './MovieCard';\nimport { Grid } from 'semantic-ui-react';\nimport { HashLoader } from 'react-spinners';\n\nconst MoviesList = ({ movies, deleteMovie }) => {\n\tconst emptyMessage = (\n\t\t<p>There are no movies yet.</p>\n\t);\n\n\tconst moviesList = (\n\t\t<div>\n\n\t\t\t<HashLoader\n\t\t\t\tsize={40}\n\t\t\t\tcolor={'#36bdb3'}\n\t\t\t\tloading={movies.fetching}\n\t\t\t/>\n\n\t\t\t{\n\t\t\t\tmovies.error.response\n\t\t\t\t\t? <h3>Error retrieving data!</h3>\n\t\t\t\t\t:\n\t\t\t\t\t<Grid stackable columns={3}>\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tmovies.movieList.map(movie =>\n\t\t\t\t\t\t\t\t<MovieCard\n\t\t\t\t\t\t\t\t\tkey={movie._id}\n\t\t\t\t\t\t\t\t\tdeleteMovie={deleteMovie}\n\t\t\t\t\t\t\t\t\tmovie={movie} />)\n\t\t\t\t\t\t}\n\t\t\t\t\t</Grid>\n\t\t\t}\n\t\t</div>\n\t);\n\n\treturn (\n\t\t<div>\n\t\t\t{ movies.length === 0 ? emptyMessage : moviesList }\n\t\t</div>\n\t);\n};\n\nMoviesList.propTypes = {\n\tmovies: PropTypes.shape({\n\t\tmovieList: PropTypes.array.isRequired\n\t}).isRequired\n};\n\nexport default MoviesList;"]},"metadata":{},"sourceType":"module"}