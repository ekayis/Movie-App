{"ast":null,"code":"import _objectSpread from \"/Users/ertugrulkayis/Desktop/Movie-App/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/ertugrulkayis/Desktop/Movie-App/src/components/NewMovieForm.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Redirect } from 'react-router-dom';\nimport { Button, Form, Image, Message } from 'semantic-ui-react';\nimport InlineError from './InlineError';\n\nclass NewMovieForm extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      _id: this.props.movie ? this.props.movie._id : '',\n      title: this.props.movie ? this.props.movie.title : '',\n      cover: this.props.movie ? this.props.movie.cover : '',\n      errors: {},\n      redirect: false\n    };\n\n    this.handleChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.onSubmit = () => {\n      const errors = this.validate();\n      this.setState({\n        errors,\n        redirect: true\n      });\n\n      const _id = this.state._id || this.props.newMovie.movie._id;\n\n      if (Object.keys(errors).length === 0) {\n        if (!_id) this.props.onNewMovieSubmit(this.state);else this.props.onUpdateMovieSubmit(_objectSpread({}, this.state, {\n          _id\n        }));\n      }\n    };\n\n    this.validate = () => {\n      const errors = {};\n      if (!this.state.title) errors.title = \"Can't be blank.\";\n      if (!this.state.cover) errors.cover = \"Can't be blank.\";\n      return errors;\n    };\n  }\n\n  componentWillReceiveProps(nextProps) {\n    const movie = nextProps.newMovie.movie;\n\n    if (movie.title && movie.title !== this.state.title) {\n      this.setState({\n        title: movie.title,\n        cover: movie.cover\n      });\n    }\n  }\n\n  render() {\n    const errors = this.state.errors;\n    const form = React.createElement(Form, {\n      onSubmit: this.onSubmit,\n      loading: this.props.newMovie.fetching || this.props.newMovie.movie.fetching,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(Form.Field, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, \"Title\"), errors.title && React.createElement(InlineError, {\n      message: errors.title,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      id: \"title\",\n      name: \"title\",\n      value: this.state.title,\n      onChange: this.handleChange,\n      placeholder: \"Title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    })), React.createElement(Form.Field, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, \"Cover Url\"), errors.cover && React.createElement(InlineError, {\n      message: errors.cover,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      id: \"cover\",\n      name: \"cover\",\n      value: this.state.cover,\n      onChange: this.handleChange,\n      placeholder: \"Cover Url\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    })), React.createElement(Image, {\n      src: this.state.cover,\n      size: \"small\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"clearfix\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }), React.createElement(Button, {\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, \"Submit\"), this.props.newMovie.error.response && React.createElement(Message, {\n      negative: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(Message.Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, \"We`re Sorry\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, \"A problem occured while recording.\")));\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, this.props.newMovie.done && this.state.redirect ? React.createElement(Redirect, {\n      to: \"/movies\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }) : form);\n  }\n\n}\n\nNewMovieForm.propTypes = {\n  onNewMovieSubmit: PropTypes.func.isRequired\n};\nexport default NewMovieForm;","map":{"version":3,"sources":["/Users/ertugrulkayis/Desktop/Movie-App/src/components/NewMovieForm.js"],"names":["React","Component","PropTypes","Redirect","Button","Form","Image","Message","InlineError","NewMovieForm","state","_id","props","movie","title","cover","errors","redirect","handleChange","e","setState","target","name","value","onSubmit","validate","newMovie","Object","keys","length","onNewMovieSubmit","onUpdateMovieSubmit","componentWillReceiveProps","nextProps","render","form","fetching","error","response","done","propTypes","func","isRequired"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport { Redirect } from 'react-router-dom';\nimport { Button, Form, Image, Message } from 'semantic-ui-react'\nimport InlineError from './InlineError';\n\nclass NewMovieForm extends Component {\n\tstate = {\n\t\t_id: this.props.movie ? this.props.movie._id : '',\n\t\ttitle: this.props.movie ? this.props.movie.title : '',\n\t\tcover: this.props.movie ? this.props.movie.cover : '',\n\t\terrors: {},\n\t\tredirect: false\n\t};\n\n\tstatic propTypes = {\n\t\tonNewMovieSubmit: PropTypes.func.isRequired\n\t};\n\n\tcomponentWillReceiveProps(nextProps) {\n\t\tconst { movie } = nextProps.newMovie;\n\t\tif (\n\t\t\tmovie.title\n\t\t\t&&\n\t\t\tmovie.title !== this.state.title\n\t\t) {\n\t\t\tthis.setState({\n\t\t\t\ttitle: movie.title,\n\t\t\t\tcover: movie.cover,\n\t\t\t});\n\n\t\t}\n\t}\n\n\thandleChange = (e) => {\n\t\tthis.setState({\n\t\t\t[e.target.name]: e.target.value\n\t\t});\n\t};\n\n\tonSubmit = () => {\n\t\tconst errors = this.validate();\n\t\tthis.setState({\n\t\t\terrors,\n\t\t\tredirect: true\n\t\t});\n\n\t\tconst _id = this.state._id || this.props.newMovie.movie._id;\n\n\t\tif (Object.keys(errors).length === 0) {\n\t\t  if (!_id)\n\t\t\t\tthis.props.onNewMovieSubmit(this.state);\n\t\t\telse\n\t\t\t\tthis.props.onUpdateMovieSubmit({ ...this.state, _id});\n\t\t}\n\t};\n\n\tvalidate = () => {\n\t\tconst errors = {};\n\t\tif (!this.state.title) errors.title = \"Can't be blank.\"\n\t\tif (!this.state.cover) errors.cover = \"Can't be blank.\"\n\t\treturn errors;\n\t};\n\n\trender() {\n\t\tconst {errors} = this.state;\n\t\tconst form = (\n\t\t\t<Form onSubmit={this.onSubmit} loading={this.props.newMovie.fetching || this.props.newMovie.movie.fetching}>\n\t\t\t\t<Form.Field>\n\t\t\t\t\t<label>Title</label>\n\t\t\t\t\t{ errors.title && <InlineError message={errors.title} /> }\n\t\t\t\t\t<input\n\t\t\t\t\t\tid=\"title\"\n\t\t\t\t\t\tname=\"title\"\n\t\t\t\t\t\tvalue={this.state.title}\n\t\t\t\t\t\tonChange={this.handleChange}\n\t\t\t\t\t\tplaceholder='Title' />\n\t\t\t\t</Form.Field>\n\t\t\t\t<Form.Field>\n\t\t\t\t\t<label>Cover Url</label>\n\t\t\t\t\t{ errors.cover && <InlineError message={errors.cover} /> }\n\t\t\t\t\t<input\n\t\t\t\t\t\tid=\"cover\"\n\t\t\t\t\t\tname=\"cover\"\n\t\t\t\t\t\tvalue={this.state.cover}\n\t\t\t\t\t\tonChange={this.handleChange}\n\t\t\t\t\t\tplaceholder='Cover Url' />\n\t\t\t\t</Form.Field>\n\t\t\t\t<Image src={this.state.cover} size='small' />\n\t\t\t\t<div className=\"clearfix\"></div>\n\t\t\t\t<Button type='submit'>Submit</Button>\n\n\t\t\t\t{\n\t\t\t\t\tthis.props.newMovie.error.response\n\t\t\t\t\t&&\n\t\t\t\t\t(\n\t\t\t\t\t\t<Message negative>\n\t\t\t\t\t\t\t<Message.Header>We`re Sorry</Message.Header>\n\t\t\t\t\t\t\t<p>A problem occured while recording.</p>\n\t\t\t\t\t\t</Message>\n\t\t\t\t\t)\n\t\t\t\t}\n\t\t\t</Form>\n\t\t);\n\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t{\n\t\t\t\t\tthis.props.newMovie.done && this.state.redirect\n\t\t\t\t\t\t? <Redirect to=\"/movies\" /> : form\n\t\t\t\t}\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default NewMovieForm;\n"]},"metadata":{},"sourceType":"module"}