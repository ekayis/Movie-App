{"ast":null,"code":"var _jsxFileName = \"/Users/ertugrulkayis/Desktop/Movie-App/src/components/pages/NewMoviePage.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport NewMovieForm from '../NewMovieForm';\nimport { onNewMovieSubmit, onUpdateMovieSubmit, fetchMovie } from '../../actions/newMovie';\n\nclass NewMoviePage extends Component {\n  componentDidMount() {\n    const match = this.props.match;\n\n    if (!this.props.movie && match.params._id) {\n      this.props.fetchMovie(match.params._id);\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, \"New Movie\"), React.createElement(NewMovieForm, {\n      movie: this.props.movie,\n      newMovie: this.props.newMovie,\n      onNewMovieSubmit: this.props.onNewMovieSubmit,\n      onUpdateMovieSubmit: this.props.onUpdateMovieSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapStateToProps = ({\n  newMovie,\n  movies\n}, props) => {\n  return {\n    newMovie,\n    movie: movies.movieList.find(item => item._id === props.match.params._id)\n  };\n};\n\nconst mapDispatchToProps = {\n  onNewMovieSubmit,\n  onUpdateMovieSubmit,\n  fetchMovie\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(NewMoviePage);","map":{"version":3,"sources":["/Users/ertugrulkayis/Desktop/Movie-App/src/components/pages/NewMoviePage.js"],"names":["React","Component","connect","NewMovieForm","onNewMovieSubmit","onUpdateMovieSubmit","fetchMovie","NewMoviePage","componentDidMount","match","props","movie","params","_id","render","newMovie","mapStateToProps","movies","movieList","find","item","mapDispatchToProps"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,YAAP,MAAyB,iBAAzB;AACA,SACCC,gBADD,EAECC,mBAFD,EAGCC,UAHD,QAIO,wBAJP;;AAMA,MAAMC,YAAN,SAA2BN,SAA3B,CAAqC;AACpCO,EAAAA,iBAAiB,GAAG;AAAA,UACXC,KADW,GACD,KAAKC,KADJ,CACXD,KADW;;AAEnB,QAAI,CAAC,KAAKC,KAAL,CAAWC,KAAZ,IAAqBF,KAAK,CAACG,MAAN,CAAaC,GAAtC,EAA2C;AACzC,WAAKH,KAAL,CAAWJ,UAAX,CAAsBG,KAAK,CAACG,MAAN,CAAaC,GAAnC;AACD;AACD;;AAEDC,EAAAA,MAAM,GAAG;AACR,WACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADD,EAEC,oBAAC,YAAD;AACC,MAAA,KAAK,EAAE,KAAKJ,KAAL,CAAWC,KADnB;AAEC,MAAA,QAAQ,EAAE,KAAKD,KAAL,CAAWK,QAFtB;AAGC,MAAA,gBAAgB,EAAE,KAAKL,KAAL,CAAWN,gBAH9B;AAIC,MAAA,mBAAmB,EAAE,KAAKM,KAAL,CAAWL,mBAJjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFD,CADD;AAUA;;AAnBmC;;AAsBrC,MAAMW,eAAe,GAAG,CAAC;AAAED,EAAAA,QAAF;AAAYE,EAAAA;AAAZ,CAAD,EAAuBP,KAAvB,KAAiC;AACxD,SAAO;AACNK,IAAAA,QADM;AAENJ,IAAAA,KAAK,EAAEM,MAAM,CAACC,SAAP,CAAiBC,IAAjB,CAAsBC,IAAI,IAAIA,IAAI,CAACP,GAAL,KAAaH,KAAK,CAACD,KAAN,CAAYG,MAAZ,CAAmBC,GAA9D;AAFD,GAAP;AAIA,CALD;;AAOA,MAAMQ,kBAAkB,GAAG;AAC1BjB,EAAAA,gBAD0B;AAE1BC,EAAAA,mBAF0B;AAG1BC,EAAAA;AAH0B,CAA3B;AAMA,eAAeJ,OAAO,CAACc,eAAD,EAAkBK,kBAAlB,CAAP,CAA6Cd,YAA7C,CAAf","sourcesContent":["import React, {Component} from 'react';\nimport { connect } from 'react-redux';\nimport NewMovieForm from '../NewMovieForm';\nimport {\n\tonNewMovieSubmit,\n\tonUpdateMovieSubmit,\n\tfetchMovie\n} from '../../actions/newMovie';\n\nclass NewMoviePage extends Component {\n\tcomponentDidMount() {\n\t\tconst { match } = this.props;\n\t\tif (!this.props.movie && match.params._id) {\n\t\t  this.props.fetchMovie(match.params._id);\n\t\t}\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<h2>New Movie</h2>\n\t\t\t\t<NewMovieForm\n\t\t\t\t\tmovie={this.props.movie}\n\t\t\t\t\tnewMovie={this.props.newMovie}\n\t\t\t\t\tonNewMovieSubmit={this.props.onNewMovieSubmit}\n\t\t\t\t\tonUpdateMovieSubmit={this.props.onUpdateMovieSubmit}/>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nconst mapStateToProps = ({ newMovie, movies }, props) => {\n\treturn {\n\t\tnewMovie,\n\t\tmovie: movies.movieList.find(item => item._id === props.match.params._id)\n\t}\n};\n\nconst mapDispatchToProps = {\n\tonNewMovieSubmit,\n\tonUpdateMovieSubmit,\n\tfetchMovie\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NewMoviePage);\n"]},"metadata":{},"sourceType":"module"}